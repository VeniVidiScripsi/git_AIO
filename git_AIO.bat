@echo off
color a
::set PATH=C:\Program Files\Git\bin;
::echo %PATH%
echo.
echo Wellcome :)
echo.
set /p "git_path=Enter git code: "

for %%F in (%git_path%) do echo %%~nxF>>temp

set /p folder=< temp && del temp
set folder=%folder:~,-4%
git clone %git_path%


::if exist .gitignore (
::	copy .gitignore %folder%
::	echo copied && pause
::) else (
::    echo gitignore file doesn't exist
::)

cd %folder%
call :data > ".gitignore"

echo. && echo. 
echo .gitignore file has been created successfully.

echo. && echo.
git add .
git commit -m "Add gitignore file"
git push
echo. && echo. 
echo it's all i can do for you...
pause

exit


:data

echo ## Ignore Visual Studio temporary files, build results, and
echo ## files generated by popular Visual Studio add-ons.
echo ##
echo ## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore
echo.
echo # User-specific files
echo *.rsuser
echo *.suo
echo *.exe
echo *.user
echo *.userosscache
echo *.sln.docstates
echo.
echo # User-specific files (MonoDevelop/Xamarin Studio)
echo *.userprefs
echo.
echo # Mono auto generated files
echo mono_crash.*
echo.
echo # Build results
echo [Dd]ebug/
echo [Dd]ebugPublic/
echo [Rr]elease/
echo [Rr]eleases/
echo x64/
echo x86/
echo [Ww][Ii][Nn]32/
echo [Aa][Rr][Mm]/
echo [Aa][Rr][Mm]64/
echo bld/
echo [Bb]in/
echo [Oo]bj/
echo [Ll]og/
echo [Ll]ogs/
echo.
echo # Visual Studio 2015/2017 cache/options directory
echo .vs/
echo # Uncomment if you have tasks that create the project's static files in wwwroot
echo #wwwroot/
echo.
echo # Visual Studio 2017 auto generated files
echo Generated\ Files/
echo.
echo # MSTest test Results
echo [Tt]est[Rr]esult*/
echo [Bb]uild[Ll]og.*
echo.
echo # NUnit
echo *.VisualState.xml
echo TestResult.xml
echo nunit-*.xml
echo.
echo # Build Results of an ATL Project
echo [Dd]ebugPS/
echo [Rr]eleasePS/
echo dlldata.c
echo.
echo # Benchmark Results
echo BenchmarkDotNet.Artifacts/
echo.
echo # .NET Core
echo project.lock.json
echo project.fragment.lock.json
echo artifacts/
echo.
echo # ASP.NET Scaffolding
echo ScaffoldingReadMe.txt
echo.
echo # StyleCop
echo StyleCopReport.xml
echo.
echo # Files built by Visual Studio
echo *_i.c
echo *_p.c
echo *_h.h
echo *.ilk
echo *.meta
echo *.obj
echo *.iobj
echo *.pch
echo *.pdb
echo *.ipdb
echo *.pgc
echo *.pgd
echo *.rsp
echo *.sbr
echo *.tlb
echo *.tli
echo *.tlh
echo *.tmp
echo *.tmp_proj
echo *_wpftmp.csproj
echo *.log
echo *.tlog
echo *.vspscc
echo *.vssscc
echo .builds
echo *.pidb
echo *.svclog
echo *.scc
echo.
echo # Chutzpah Test files
echo _Chutzpah*
echo.
echo # Visual C++ cache files
echo ipch/
echo *.aps
echo *.ncb
echo *.opendb
echo *.opensdf
echo *.sdf
echo *.cachefile
echo *.VC.db
echo *.VC.VC.opendb
echo.
echo # Visual Studio profiler
echo *.psess
echo *.vsp
echo *.vspx
echo *.sap
echo.
echo # Visual Studio Trace Files
echo *.e2e
echo.
echo # TFS 2012 Local Workspace
echo $tf/
echo.
echo # Guidance Automation Toolkit
echo *.gpState
echo.
echo # ReSharper is a .NET coding add-in
echo _ReSharper*/
echo *.[Rr]e[Ss]harper
echo *.DotSettings.user
echo.
echo # TeamCity is a build add-in
echo _TeamCity*
echo.
echo # DotCover is a Code Coverage Tool
echo *.dotCover
echo.
echo # AxoCover is a Code Coverage Tool
echo .axoCover/*
echo !.axoCover/settings.json
echo.
echo # Coverlet is a free, cross platform Code Coverage Tool
echo coverage*.json
echo coverage*.xml
echo coverage*.info
echo.
echo # Visual Studio code coverage results
echo *.coverage
echo *.coveragexml
echo.
echo # NCrunch
echo _NCrunch_*
echo .*crunch*.local.xml
echo nCrunchTemp_*
echo.
echo # MightyMoose
echo *.mm.*
echo AutoTest.Net/
echo.
echo # Web workbench (sass)
echo .sass-cache/
echo.
echo # Installshield output folder
echo [Ee]xpress/
echo.
echo # DocProject is a documentation generator add-in
echo DocProject/buildhelp/
echo DocProject/Help/*.HxT
echo DocProject/Help/*.HxC
echo DocProject/Help/*.hhc
echo DocProject/Help/*.hhk
echo DocProject/Help/*.hhp
echo DocProject/Help/Html2
echo DocProject/Help/html
echo.
echo # Click-Once directory
echo publish/
echo.
echo # Publish Web Output
echo *.[Pp]ublish.xml
echo *.azurePubxml
echo # Note: Comment the next line if you want to checkin your web deploy settings,
echo # but database connection strings (with potential passwords) will be unencrypted
echo *.pubxml
echo *.publishproj
echo.
echo # Microsoft Azure Web App publish settings. Comment the next line if you want to
echo # checkin your Azure Web App publish settings, but sensitive information contained
echo # in these scripts will be unencrypted
echo PublishScripts/
echo.
echo # NuGet Packages
echo *.nupkg
echo # NuGet Symbol Packages
echo *.snupkg
echo # The packages folder can be ignored because of Package Restore
echo **/[Pp]ackages/*
echo # except build/, which is used as an MSBuild target.
echo !**/[Pp]ackages/build/
echo # Uncomment if necessary however generally it will be regenerated when needed
echo #!**/[Pp]ackages/repositories.config
echo # NuGet v3's project.json files produces more ignorable files
echo *.nuget.props
echo *.nuget.targets
echo.
echo # Microsoft Azure Build Output
echo csx/
echo *.build.csdef
echo.
echo # Microsoft Azure Emulator
echo ecf/
echo rcf/
echo.
echo # Windows Store app package directories and files
echo AppPackages/
echo BundleArtifacts/
echo Package.StoreAssociation.xml
echo _pkginfo.txt
echo *.appx
echo *.appxbundle
echo *.appxupload
echo.
echo # Visual Studio cache files
echo # files ending in .cache can be ignored
echo *.[Cc]ache
echo # but keep track of directories ending in .cache
echo !?*.[Cc]ache/
echo.
echo # Others
echo ClientBin/
echo ~$*
echo *~
echo *.dbmdl
echo *.dbproj.schemaview
echo *.jfm
echo *.pfx
echo *.publishsettings
echo orleans.codegen.cs
echo.
echo # Including strong name files can present a security risk
echo # (https://github.com/github/gitignore/pull/2483#issue-259490424)
echo #*.snk
echo.
echo # Since there are multiple workflows, uncomment next line to ignore bower_components
echo # (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
echo #bower_components/
echo.
echo # RIA/Silverlight projects
echo Generated_Code/
echo.
echo # Backup and report files from converting an old project file
echo # to a newer Visual Studio version. Backup files are not needed,
echo # because we have git ;-)
echo _UpgradeReport_Files/
echo Backup*/
echo UpgradeLog*.XML
echo UpgradeLog*.htm
echo ServiceFabricBackup/
echo *.rptproj.bak
echo.
echo # SQL Server files
echo *.mdf
echo *.ldf
echo *.ndf
echo.
echo # Business Intelligence projects
echo *.rdl.data
echo *.bim.layout
echo *.bim_*.settings
echo *.rptproj.rsuser
echo *- [Bb]ackup.rdl
echo *- [Bb]ackup ([0-9]).rdl
echo *- [Bb]ackup ([0-9][0-9]).rdl
echo.
echo # Microsoft Fakes
echo FakesAssemblies/
echo.
echo # GhostDoc plugin setting file
echo *.GhostDoc.xml
echo.
echo # Node.js Tools for Visual Studio
echo .ntvs_analysis.dat
echo node_modules/
echo.
echo # Visual Studio 6 build log
echo *.plg
echo.
echo # Visual Studio 6 workspace options file
echo *.opt
echo.
echo # Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
echo *.vbw
echo.
echo # Visual Studio 6 auto-generated project file (contains which files were open etc.)
echo *.vbp
echo.
echo # Visual Studio 6 workspace and project file (working project files containing files to include in project)
echo *.dsw
echo *.dsp
echo.
echo # Visual Studio 6 technical files
echo *.ncb
echo *.aps
echo.
echo # Visual Studio LightSwitch build output
echo **/*.HTMLClient/GeneratedArtifacts
echo **/*.DesktopClient/GeneratedArtifacts
echo **/*.DesktopClient/ModelManifest.xml
echo **/*.Server/GeneratedArtifacts
echo **/*.Server/ModelManifest.xml
echo _Pvt_Extensions
echo.
echo # Paket dependency manager
echo .paket/paket.exe
echo paket-files/
echo.
echo # FAKE - F# Make
echo .fake/
echo.
echo # CodeRush personal settings
echo .cr/personal
echo.
echo # Python Tools for Visual Studio (PTVS)
echo __pycache__/
echo *.pyc
echo.
echo # Cake - Uncomment if you are using it
echo # tools/**
echo # !tools/packages.config
echo.
echo # Tabs Studio
echo *.tss
echo.
echo # Telerik's JustMock configuration file
echo *.jmconfig
echo.
echo # BizTalk build output
echo *.btp.cs
echo *.btm.cs
echo *.odx.cs
echo *.xsd.cs
echo.
echo # OpenCover UI analysis results
echo OpenCover/
echo.
echo # Azure Stream Analytics local run output
echo ASALocalRun/
echo.
echo # MSBuild Binary and Structured Log
echo *.binlog
echo.
echo # NVidia Nsight GPU debugger configuration file
echo *.nvuser
echo.
echo # MFractors (Xamarin productivity tool) working folder
echo .mfractor/
echo.
echo # Local History for Visual Studio
echo .localhistory/
echo.
echo # Visual Studio History (VSHistory) files
echo .vshistory/
echo.
echo # BeatPulse healthcheck temp database
echo healthchecksdb
echo.
echo # Backup folder for Package Reference Convert tool in Visual Studio 2017
echo MigrationBackup/
echo.
echo # Ionide (cross platform F# VS Code tools) working folder
echo .ionide/
echo.
echo # Fody - auto-generated XML schema
echo FodyWeavers.xsd
echo.
echo # VS Code files for those working on multiple tools
echo .vscode/*
echo !.vscode/settings.json
echo !.vscode/tasks.json
echo !.vscode/launch.json
echo !.vscode/extensions.json
echo *.code-workspace
echo.
echo # Local History for Visual Studio Code
echo .history/
echo.
echo # Windows Installer files from build outputs
echo *.cab
echo *.msi
echo *.msix
echo *.msm
echo *.msp
echo.
echo # JetBrains Rider
echo *.sln.iml